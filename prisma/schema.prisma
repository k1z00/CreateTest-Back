generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider     = "postgresql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

//* ==== User ==================================================================== *//

model User {
  id       Int     @id @unique @default(autoincrement())
  email    String
  name     String?
  password String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now()) @updatedAt

  UserPermission UserPermission[]
  PassedTest     PassedTest[]

  @@map(name: "user")
}

model UserPermission {
  id         Int        @id @unique @default(autoincrement())
  userId     Int
  permission Permission

  User User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
  @@map(name: "user_permission")
}

enum Permission {
  AiGenerate
}

//* ==== Test ==================================================================== *//

model Test {
  id Int @id @unique @default(autoincrement())

  title     String
  source    String?
  seed      String
  counts    Int
  questions Json // Просто для удобства

  PassedTest PassedTest[]

  @@map(name: "test")
}

model PassedTest {
  id      Int  @id @unique @default(autoincrement())
  testId  Int
  userId  Int
  answers Json // Просто для удобства

  createdAt DateTime @default(now())

  Test Test @relation(fields: [testId], references: [id], onDelete: Cascade)
  User User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([testId])
  @@index([userId])
  @@map(name: "passed_test")
}
